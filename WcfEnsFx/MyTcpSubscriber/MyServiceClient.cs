////------------------------------------------------------------------------------
//// <auto-generated>
////     This code was generated by a tool.
////     Runtime Version:4.0.30319.42000
////
////     Changes to this file may cause incorrect behavior and will be lost if
////     the code is regenerated.
//// </auto-generated>
////------------------------------------------------------------------------------



//[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
//[System.ServiceModel.ServiceContractAttribute(Namespace = "https://github.com/Claude-He/WcfEnsFx", ConfigurationName = "IMyService", CallbackContract = typeof(IMyServiceCallback))]
//public interface IMyService
//{

//    // CODEGEN: Generating message contract since the wrapper namespace (http://tempuri.org/) of message SubscribeRequest does not match the default value (https://github.com/Claude-He/WcfEnsFx)
//    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IEnsSubscription/Subscribe", ReplyAction = "http://tempuri.org/IEnsSubscription/SubscribeResponse")]
//    SubscribeResponse Subscribe(SubscribeRequest request);

//    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IEnsSubscription/Subscribe", ReplyAction = "http://tempuri.org/IEnsSubscription/SubscribeResponse")]
//    System.Threading.Tasks.Task<SubscribeResponse> SubscribeAsync(SubscribeRequest request);

//    // CODEGEN: Generating message contract since the wrapper namespace (http://tempuri.org/) of message UnsubscribeRequest does not match the default value (https://github.com/Claude-He/WcfEnsFx)
//    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IEnsSubscription/Unsubscribe", ReplyAction = "http://tempuri.org/IEnsSubscription/UnsubscribeResponse")]
//    UnsubscribeResponse Unsubscribe(UnsubscribeRequest request);

//    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IEnsSubscription/Unsubscribe", ReplyAction = "http://tempuri.org/IEnsSubscription/UnsubscribeResponse")]
//    System.Threading.Tasks.Task<UnsubscribeResponse> UnsubscribeAsync(UnsubscribeRequest request);

//    [System.ServiceModel.OperationContractAttribute(Action = "https://github.com/Claude-He/WcfEnsFx/IMyService/GetTime", ReplyAction = "https://github.com/Claude-He/WcfEnsFx/IMyService/GetTimeResponse")]
//    System.DateTime GetTime();

//    [System.ServiceModel.OperationContractAttribute(Action = "https://github.com/Claude-He/WcfEnsFx/IMyService/GetTime", ReplyAction = "https://github.com/Claude-He/WcfEnsFx/IMyService/GetTimeResponse")]
//    System.Threading.Tasks.Task<System.DateTime> GetTimeAsync();
//}

//[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
//public interface IMyServiceCallback
//{

//    [System.ServiceModel.OperationContractAttribute(Action = "https://github.com/Claude-He/WcfEnsFx/IMyService/DemoEvent", ReplyAction = "https://github.com/Claude-He/WcfEnsFx/IMyService/DemoEventResponse")]
//    void DemoEvent();
//}

//[System.Diagnostics.DebuggerStepThroughAttribute()]
//[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
//[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
//[System.ServiceModel.MessageContractAttribute(WrapperName = "Subscribe", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
//public partial class SubscribeRequest
//{

//    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
//    public string subscriberName;

//    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)]
//    public string eventName;

//    public SubscribeRequest()
//    {
//    }

//    public SubscribeRequest(string subscriberName, string eventName)
//    {
//        this.subscriberName = subscriberName;
//        this.eventName = eventName;
//    }
//}

//[System.Diagnostics.DebuggerStepThroughAttribute()]
//[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
//[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
//[System.ServiceModel.MessageContractAttribute(WrapperName = "SubscribeResponse", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
//public partial class SubscribeResponse
//{

//    public SubscribeResponse()
//    {
//    }
//}

//[System.Diagnostics.DebuggerStepThroughAttribute()]
//[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
//[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
//[System.ServiceModel.MessageContractAttribute(WrapperName = "Unsubscribe", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
//public partial class UnsubscribeRequest
//{

//    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
//    public string eventName;

//    public UnsubscribeRequest()
//    {
//    }

//    public UnsubscribeRequest(string eventName)
//    {
//        this.eventName = eventName;
//    }
//}

//[System.Diagnostics.DebuggerStepThroughAttribute()]
//[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
//[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
//[System.ServiceModel.MessageContractAttribute(WrapperName = "UnsubscribeResponse", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
//public partial class UnsubscribeResponse
//{

//    public UnsubscribeResponse()
//    {
//    }
//}

//[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
//public interface IMyServiceChannel : IMyService, System.ServiceModel.IClientChannel
//{
//}

//[System.Diagnostics.DebuggerStepThroughAttribute()]
//[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
//public partial class MyServiceClient : System.ServiceModel.DuplexClientBase<IMyService>, IMyService
//{

//    public MyServiceClient(System.ServiceModel.InstanceContext callbackInstance) :
//            base(callbackInstance)
//    {
//    }

//    public MyServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) :
//            base(callbackInstance, endpointConfigurationName)
//    {
//    }

//    public MyServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) :
//            base(callbackInstance, endpointConfigurationName, remoteAddress)
//    {
//    }

//    public MyServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
//            base(callbackInstance, endpointConfigurationName, remoteAddress)
//    {
//    }

//    public MyServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
//            base(callbackInstance, binding, remoteAddress)
//    {
//    }

//    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
//    SubscribeResponse IMyService.Subscribe(SubscribeRequest request)
//    {
//        return base.Channel.Subscribe(request);
//    }

//    public void Subscribe(string subscriberName, string eventName)
//    {
//        SubscribeRequest inValue = new SubscribeRequest();
//        inValue.subscriberName = subscriberName;
//        inValue.eventName = eventName;
//        SubscribeResponse retVal = ((IMyService)(this)).Subscribe(inValue);
//    }

//    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
//    System.Threading.Tasks.Task<SubscribeResponse> IMyService.SubscribeAsync(SubscribeRequest request)
//    {
//        return base.Channel.SubscribeAsync(request);
//    }

//    public System.Threading.Tasks.Task<SubscribeResponse> SubscribeAsync(string subscriberName, string eventName)
//    {
//        SubscribeRequest inValue = new SubscribeRequest();
//        inValue.subscriberName = subscriberName;
//        inValue.eventName = eventName;
//        return ((IMyService)(this)).SubscribeAsync(inValue);
//    }

//    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
//    UnsubscribeResponse IMyService.Unsubscribe(UnsubscribeRequest request)
//    {
//        return base.Channel.Unsubscribe(request);
//    }

//    public void Unsubscribe(string eventName)
//    {
//        UnsubscribeRequest inValue = new UnsubscribeRequest();
//        inValue.eventName = eventName;
//        UnsubscribeResponse retVal = ((IMyService)(this)).Unsubscribe(inValue);
//    }

//    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
//    System.Threading.Tasks.Task<UnsubscribeResponse> IMyService.UnsubscribeAsync(UnsubscribeRequest request)
//    {
//        return base.Channel.UnsubscribeAsync(request);
//    }

//    public System.Threading.Tasks.Task<UnsubscribeResponse> UnsubscribeAsync(string eventName)
//    {
//        UnsubscribeRequest inValue = new UnsubscribeRequest();
//        inValue.eventName = eventName;
//        return ((IMyService)(this)).UnsubscribeAsync(inValue);
//    }

//    public System.DateTime GetTime()
//    {
//        return base.Channel.GetTime();
//    }

//    public System.Threading.Tasks.Task<System.DateTime> GetTimeAsync()
//    {
//        return base.Channel.GetTimeAsync();
//    }
//}
